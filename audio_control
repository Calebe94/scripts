#!/bin/bash

####################################### | GLOBAL VARIABLES | #######################################

volume_command="amixer -q sset Master"

####################################### | RUNTIME VARIABLES | ######################################

command_var=""
notification_string=""
verbose=0
show_notification_time=1

########################################### | FUNCTIONS | ##########################################

usage()
{
  echo "usage: audio_control"
  echo "options:"
  echo "-i: increase audio volume"
  echo "-d: decrease audio volume"
  echo "-v: verbose"
  echo "-m: mute audio"
  echo "-t: time which notification will be displayed"
  echo "-h: help"
  exit 0
}

create_notification()
{
  is_on=$(amixer sget Master | grep 'Right:' | awk -F'[][]' '{ print $4 }')
  if [ "$is_on" == "on" ];then
    audio_volume=$(amixer sget Master | grep 'Right:' | awk -F'[][]' '{ print $2 }' | sed 's|[%]||g')
    xsetroot -name "audio $audio_volume%: $(tprogbar -v $audio_volume -p '|')"
  else
    xsetroot -name "audio muted: $(tprogbar -v 0)"
  fi
}

display_notification()
{
  killall slstatus
  create_notification
  sleep $show_notification_time
  slstatus &
}

######################################## | PARSE ARGUMENTS | #######################################

[[ -z "$@" ]] && usage

while getopts "i:d:t:mvh" args; do
  case "${args}" in
    i|increase)
      command_var="$volume_command unmute ${OPTARG}%+"
      ;;
    d|decrease)
      command_var="$volume_command unmute ${OPTARG}%-"
      ;;
    m|mute)
      command_var="$volume_command toggle"
      playerctl -a play-pause
      ;;
    v|verbose)
      verbose=1
      ;;
    t|time)
      show_notification_time=${OPTARG}
      ;;
    h|help)
      usage
      ;;
    * )
      usage
      ;;
  esac
done

######################################## | EXECUTE COMMAND | #######################################

# Check dependencies
[ -z $(which amixer) ] && echo '"amixer" not found.' && exit 1
[ -z $(which xsetroot) ] && echo '"xsetroot" not found.' && exit 1
[ -z $(which tprogbar) ] && echo '"tprogbar" not found.' && exit 1
[ -z $(which playerctl) ] && echo '"playerctl" not found.' && exit 1
[ -z $(which killall) ] && echo '"killall" not found.' && exit 1
[ -z $(which slstatus) ] && echo '"slstatus" not found.' && exit 1

eval "${command_var[@]}"

[ $verbose -eq 1 ] && display_notification

